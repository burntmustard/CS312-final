---
- name: Update system packages
  yum:
    name: "*"
    state: latest

- name: Install Java 21 (required for latest Minecraft)
  yum:
    name: java-21-amazon-corretto-headless
    state: present

- name: Create minecraft user
  user:
    name: "{{ minecraft_user }}"
    system: yes
    shell: /bin/bash
    home: "{{ minecraft_home }}"
    create_home: yes

- name: Create minecraft directory
  file:
    path: "{{ minecraft_home }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    mode: '0755'
    state: directory

- name: Get latest Minecraft version manifest
  uri:
    url: "https://piston-meta.mojang.com/mc/game/version_manifest_v2.json"
    method: GET
    return_content: yes
  register: version_manifest

- name: Extract latest release version
  set_fact:
    latest_version: "{{ version_manifest.json.latest.release }}"

- name: Get version-specific manifest
  uri:
    url: "{{ (version_manifest.json.versions | selectattr('id', 'equalto', latest_version) | list | first).url }}"
    method: GET
    return_content: yes
  register: version_info

- name: Extract server download URL
  set_fact:
    server_jar_url: "{{ version_info.json.downloads.server.url }}"
    server_jar_sha1: "{{ version_info.json.downloads.server.sha1 }}"

- name: Display version being downloaded
  debug:
    msg: "Downloading Minecraft server version {{ latest_version }}"

- name: Download latest Minecraft server jar
  get_url:
    url: "{{ server_jar_url }}"
    dest: "{{ minecraft_home }}/server.jar"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    mode: '0644'
    checksum: "sha1:{{ server_jar_sha1 }}"
  notify: restart minecraft

- name: Accept EULA
  copy:
    content: "eula=true\n"
    dest: "{{ minecraft_home }}/eula.txt"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    mode: '0644'

- name: Create server.properties
  template:
    src: server.properties.j2
    dest: "{{ minecraft_home }}/server.properties"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_user }}"
    mode: '0644'
  notify: restart minecraft

- name: Create minecraft systemd service
  template:
    src: minecraft.service.j2
    dest: /etc/systemd/system/minecraft.service
    mode: '0644'
  notify:
    - reload systemd
    - restart minecraft

- name: Enable and start minecraft service
  systemd:
    name: minecraft
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for server to start
  wait_for:
    port: 25565
    host: "{{ ansible_default_ipv4.address }}"
    delay: 30
    timeout: 300
  ignore_errors: true

- name: Display server information
  debug:
    msg: 
      - "Minecraft server is running"
      - "Connect to: {{ ansible_default_ipv4.address }}:25565"